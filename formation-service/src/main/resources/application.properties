
#--------------------- MicroService Connection ------------------
spring.application.name=formation-data-service
server.port=8084
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka


#--------------------- DB Connection ------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/CourseData
spring.datasource.username=postgres
spring.datasource.password=changeme

#--------------------JPA-ORM Properties-----------------
#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
hibernate.dialect.storage_engine=innodb
spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.formation.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.formation.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.formation.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.formation.slidingWindowSize=5
resilience4j.circuitbreaker.instances.formation.failureRateThreshold=50
resilience4j.circuitbreaker.instances.formation.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.formation.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.formation.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.formation.timeout-duration=5s

#Resilience4J Retry Properties
resilience4j.retry.instances.formation.max-attempts=3
resilience4j.retry.instances.formation.wait-duration=5s


spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability= 1.0

# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:io.microservice.formationdataservice.event.FormationPlaceEvent

